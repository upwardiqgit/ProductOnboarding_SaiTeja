import React, { useEffect, useState } from 'react';
import ExportTable from '../ExportTable/index.js';
import './index.css';
import LeftHeader from "../LeftHeader/index.js";
import Header from "../Header/index.js";
import { Link } from "react-router-dom";

const CustomerSearch = () => {

    const [filter, setFilter] = useState({ name: '', gender: 'All' });
    const [customers, setUpCustomerList] = useState([]);
    const [filteredCustomers, setFilteredCustomers] = useState([]);
    const [isSearchBtn, setSearchBtn] = useState(false);


    const fetchData = async () => {
        const response = await fetch('http://localhost:8080/api/customers');
        const customerList = await response.json();
        setUpCustomerList(customerList);

    };

    useEffect(() => {
        fetchData();
    }, []);
const clearedFilteredData=()=> {
    if (filteredCustomers.length === 0) {
        setSearchBtn(false);
    } else {
        setSearchBtn(true);
    }
}
    const onSearch=()=> {
        clearedFilteredData();

        if (customers.length > 0) {
            setSearchBtn(true)
            setFilteredCustomers(
                customers.filter((customer) => {

                    const nameMatch = customer.customerName && customer.customerName.toLowerCase().includes(filter.name.toLowerCase());

                    const genderMatch =
                        filter.gender === 'All' || customer.gender.toLowerCase() === filter.gender.toLowerCase();
                    return nameMatch && genderMatch;
                })
            );
        }
    }




    const handleFilterChange = (e) => {
        const { name, value } = e.target;
        setFilter((prevFilter) => ({
            ...prevFilter,
            [name]: value,
        }));

    };
    console.log(filteredCustomers);

    return (
        <div className="searchContainer">
            <table className="searchTable">
                <thead>
                <tr>
                    <th colSpan="2"><Header /></th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td style={{ textAlign: 'center', verticalAlign: 'middle', height: '300px' }}>
                        <LeftHeader />
                    </td>
                    <td style={{ height: '300px' }} className="customerSearchData">
                        <div className="searchInputContainer">
                            <h1 className="searchCustomerTab"><Link to="/">Home</Link> >> Search Customer</h1>
                            <div className="searchElContainer">
                                <div className="searchInput">
                                    <label>Customer Name:</label>
                                    <input
                                        type="text"
                                        name="name"
                                        value={filter.name}
                                        onChange={handleFilterChange}
                                        className="InputEl"
                                    />
                                </div>
                                <div>
                                    <label>Gender:</label>
                                    <select
                                        name="gender"
                                        value={filter.gender}
                                        onChange={handleFilterChange}
                                        className="InputEl"
                                    >
                                        <option value="All">All</option>
                                        <option value="Male">Male</option>
                                        <option value="Female">Female</option>
                                    </select>
                                </div>
                            </div>
                            <div className="searchBtnContainer">
                                <button className="searchBtn" onClick={onSearch}>Search</button>
                                <ExportTable />
                            </div>
                        </div>
                        {filteredCustomers.length>0 &&
                        <table className="customerfilteredList">
                            <thead>
                            <tr>
                                <th>Customer ID</th>
                                <th>Customer Name</th>
                                <th>Gender</th>
                                <th>Address</th>
                            </tr>
                            </thead>
                            <tbody>
                            {filteredCustomers.map((customer) => (
                                <tr key={customer.id}>
                                    <td>{customer.id}</td>
                                    <td>{customer.customerName}</td>
                                    <td>{customer.gender}</td>
                                    <td>{customer.address}</td>
                                </tr>
                            ))}
                            </tbody>
                        </table>

                        }
                        {filteredCustomers.length===0  &&
                            <div className="noDataFound">
                                <h1>No Data Found</h1>
                            </div>
                        }
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    );
};

export default CustomerSearch;
import React, { useEffect, useState } from 'react';
import ExportTable from '../ExportTable/index.js';
import './index.css';
import LeftHeader from "../LeftHeader/index.js";
import Header from "../Header/index.js";
import { Link } from "react-router-dom";

const CustomerSearch = () => {

    const [filter, setFilter] = useState({ name: '', gender: 'All' });
    const [customers, setUpCustomerList] = useState([]);
    const [filteredCustomers, setFilteredCustomers] = useState([]);
    const [isSearchBtn, setSearchBtn] = useState(false);


    const fetchData = async () => {
        const response = await fetch('http://localhost:8080/api/customers');
        const customerList = await response.json();
        setUpCustomerList(customerList);

    };

    useEffect(() => {
        fetchData();
    }, []);
const clearedFilteredData=()=> {
    if (filteredCustomers.length === 0) {
        setSearchBtn(false);
    } else {
        setSearchBtn(true);
    }
}
    const onSearch=()=> {
        clearedFilteredData();

        if (customers.length > 0) {
            setSearchBtn(true)
            setFilteredCustomers(
                customers.filter((customer) => {

                    const nameMatch = customer.customerName && customer.customerName.toLowerCase().includes(filter.name.toLowerCase());

                    const genderMatch =
                        filter.gender === 'All' || customer.gender.toLowerCase() === filter.gender.toLowerCase();
                    return nameMatch && genderMatch;
                })
            );
        }
    }




    const handleFilterChange = (e) => {
        const { name, value } = e.target;
        setFilter((prevFilter) => ({
            ...prevFilter,
            [name]: value,
        }));

    };
    console.log(filteredCustomers);

    return (
        <div className="searchContainer">
            <table className="searchTable">
                <thead>
                <tr>
                    <th colSpan="2"><Header /></th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td style={{ textAlign: 'center', verticalAlign: 'middle', height: '300px' }}>
                        <LeftHeader />
                    </td>
                    <td style={{ height: '300px' }} className="customerSearchData">
                        <div className="searchInputContainer">
                            <h1 className="searchCustomerTab"><Link to="/">Home</Link> >> Search Customer</h1>
                            <div className="searchElContainer">
                                <div className="searchInput">
                                    <label>Customer Name:</label>
                                    <input
                                        type="text"
                                        name="name"
                                        value={filter.name}
                                        onChange={handleFilterChange}
                                        className="InputEl"
                                    />
                                </div>
                                <div>
                                    <label>Gender:</label>
                                    <select
                                        name="gender"
                                        value={filter.gender}
                                        onChange={handleFilterChange}
                                        className="InputEl"
                                    >
                                        <option value="All">All</option>
                                        <option value="Male">Male</option>
                                        <option value="Female">Female</option>
                                    </select>
                                </div>
                            </div>
                            <div className="searchBtnContainer">
                                <button className="searchBtn" onClick={onSearch}>Search</button>
                                <ExportTable />
                            </div>
                        </div>
                        {filteredCustomers.length>0 &&
                        <table className="customerfilteredList">
                            <thead>
                            <tr>
                                <th>Customer ID</th>
                                <th>Customer Name</th>
                                <th>Gender</th>
                                <th>Address</th>
                            </tr>
                            </thead>
                            <tbody>
                            {filteredCustomers.map((customer) => (
                                <tr key={customer.id}>
                                    <td>{customer.id}</td>
                                    <td>{customer.customerName}</td>
                                    <td>{customer.gender}</td>
                                    <td>{customer.address}</td>
                                </tr>
                            ))}
                            </tbody>
                        </table>

                        }
                        {filteredCustomers.length===0  &&
                            <div className="noDataFound">
                                <h1>No Data Found</h1>
                            </div>
                        }
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    );
};

export default CustomerSearch;
import React, { useEffect, useState } from 'react';
import ExportTable from '../ExportTable/index.js';
import './index.css';
import LeftHeader from "../LeftHeader/index.js";
import Header from "../Header/index.js";
import { Link } from "react-router-dom";

const CustomerSearch = () => {

    const [filter, setFilter] = useState({ name: '', gender: 'All' });
    const [customers, setUpCustomerList] = useState([]);
    const [filteredCustomers, setFilteredCustomers] = useState([]);
    const [isSearchBtn, setSearchBtn] = useState(false);


    const fetchData = async () => {
        const response = await fetch('http://localhost:8080/api/customers');
        const customerList = await response.json();
        setUpCustomerList(customerList);

    };

    useEffect(() => {
        fetchData();
    }, []);
const clearedFilteredData=()=> {
    if (filteredCustomers.length === 0) {
        setSearchBtn(false);
    } else {
        setSearchBtn(true);
    }
}
    const onSearch=()=> {
        clearedFilteredData();

        if (customers.length > 0) {
            setSearchBtn(true)
            setFilteredCustomers(
                customers.filter((customer) => {

                    const nameMatch = customer.customerName && customer.customerName.toLowerCase().includes(filter.name.toLowerCase());

                    const genderMatch =
                        filter.gender === 'All' || customer.gender.toLowerCase() === filter.gender.toLowerCase();
                    return nameMatch && genderMatch;
                })
            );
        }
    }




    const handleFilterChange = (e) => {
        const { name, value } = e.target;
        setFilter((prevFilter) => ({
            ...prevFilter,
            [name]: value,
        }));

    };
    console.log(filteredCustomers);

    return (
        <div className="searchContainer">
…
[9:20 am, 19/11/2024] Teja Naidu Palla: import React, { useEffect, useState } from 'react';
import LeftHeader from "../LeftHeader/index.js";
import "./index.css";
import { Link } from "react-router-dom";
import Header from "../Header/index.js";

const CustomerUpload = () => {
    const [jsonData, setJsonData] = useState('');
    const [uploadedData, setUploadedData] = useState([]);
    const [isClickedLoad, setClickedLoad] = useState(false);
    const [error, setError] = useState("");

    const validateJSON = (data) => {
        try {
            JSON.parse(data);
            return true;
        } catch (e) {
            return false;
        }
    };


    const handleFileChange = (e) => {
        const data = e.target.value;
        setJsonData(data);


    };
    const fetchData = async () => {
        const response = await fetch('http://localhost:8080/api/customers');
        const customerList = await response.json();
        setUploadedData(customerList);

    };
    useEffect(() => {
        fetchData();
    }, []);

    const handleUpload = async () => {
        setClickedLoad(true);

        if (jsonData && validateJSON(jsonData)) {
            const formObj = JSON.parse(jsonData);
            setUploadedData([...uploadedData, formObj]);


        }else {
            console.log("error");
        }

    };
    const handleClear=()=> {
        setClickedLoad(false);
        setError("");
        setJsonData("");
    }

    // Save data to the server
    const handleSave = () => {

            fetch('http://localhost:8080/api/savecustomer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(uploadedData)
            })
                .then(response => response.json())
                .then(data => console.log('Success:', data))
                .catch(error => console.error('Error:', error));



    };

    return (
        <div className="uploadContainer">

            <table className="uploadTable">
                <thead>
                <tr>
                    <th colSpan="2"><Header/></th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td style={{textAlign: 'center', verticalAlign: 'middle', height: '400px'}}>
                        <LeftHeader/>
                    </td>
                    <td style={{height: '400px', verticalAlign: 'start'}} className="uploadForm" >

                            <div className="uploaTopSection">
                            <h1 className="uploadCustomerTab"><Link to="/">Home</Link> >> Upload Customer</h1>
                            <div className="teaxtAreaBtnsContainer">
                                <div className="teaxtAreaContainer">
                                    <h1 className="uploadCustomerHead">Upload Customer Data: </h1>
                                    <textarea
                                        value={jsonData}
                                        onChange={handleFileChange}
                                        placeholder="Enter customer JSON"
                                        rows="5"
                                        className="textarea"
                                    />
                                </div>
                                <div className="btnContainer">
                                    <button onClick={handleUpload} className="button">Load</button>
                                    <button onClick={handleSave} className="button">Save to DB</button>
                                    <button onClick={handleClear} className="button">Clear</button>
                                </div>
                            </div>
                            </div>
                            {(isClickedLoad) &&

                            <table className="customeListTable">
                                <thead>
                                <tr>
                                    <th>Customer ID</th>
                                    <th>Customer Name</th>
                                    <th>Gender</th>
                                    <th>Address</th>
                                </tr>
                                </thead>
                                <tbody>
                                {uploadedData.map((customer) => (
                                    <tr key={customer.id}>
                                        <td >{customer.id}</td>
                                        <td>{customer.customerName}</td>
                                        <td>{customer.gender}</td>
                                        <td>{customer.address}</td>
                                    </tr>
                                ))}
                                </tbody>
                            </table>

                            }




                    </td>

                </tr>

                </tbody>
            </table>


        </div>
    );
};

export default CustomerUpload;
import React, { useEffect, useState } from 'react';
import LeftHeader from "../LeftHeader/index.js";
import "./index.css";
import { Link } from "react-router-dom";
import Header from "../Header/index.js";

const CustomerUpload = () => {
    const [jsonData, setJsonData] = useState('');
    const [uploadedData, setUploadedData] = useState([]);
    const [isClickedLoad, setClickedLoad] = useState(false);
    const [error, setError] = useState("");

    const validateJSON = (data) => {
        try {
            JSON.parse(data);
            return true;
        } catch (e) {
            return false;
        }
    };


    const handleFileChange = (e) => {
        const data = e.target.value;
        setJsonData(data);


    };
    const fetchData = async () => {
        const response = await fetch('http://localhost:8080/api/customers');
        const customerList = await response.json();
        setUploadedData(customerList);

    };
    useEffect(() => {
        fetchData();
    }, []);

    const handleUpload = async () => {
        setClickedLoad(true);

        if (jsonData && validateJSON(jsonData)) {
            const formObj = JSON.parse(jsonData);
            setUploadedData([...uploadedData, formObj]);


        }else {
            console.log("error");
        }

    };
    const handleClear=()=> {
        setClickedLoad(false);
        setError("");
        setJsonData("");
    }

    // Save data to the server
    const handleSave = () => {

            fetch('http://localhost:8080/api/savecustomer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(uploadedData)
            })
                .then(response => response.json())
                .then(data => console.log('Success:', data))
                .catch(error => console.error('Error:', error));



    };

    return (
        <div className="uploadContainer">

            <table className="uploadTable">
                <thead>
                <tr>
                    <th colSpan="2"><Header/></th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td style={{textAlign: 'center', verticalAlign: 'middle', height: '400px'}}>
                        <LeftHeader/>
                    </td>
                    <td style={{height: '400px', verticalAlign: 'start'}} className="uploadForm" >

                            <div className="uploaTopSection">
                            <h1 className="uploadCustomerTab"><Link to="/">Home</Link> >> Upload Customer</h1>
                            <div className="teaxtAreaBtnsContainer">
                                <div className="teaxtAreaContainer">
                                    <h1 className="uploadCustomerHead">Upload Customer Data: </h1>
                                    <textarea
                                        value={jsonData}
                                        onChange={handleFileChange}
                                        placeholder="Enter customer JSON"
                                        rows="5"
                                        className="textarea"
                                    />
                                </div>
                                <div className="btnContainer">
                                    <button onClick={handleUpload} className="button">Load</button>
                                    <button onClick={handleSave} className="button">Save to DB</button>
                                    <button onClick={handleClear} className="button">Clear</button>
                                </div>
                            </div>
                            </div>
                            {(isClickedLoad) &&

                            <table className="customeListTable">
                                <thead>
                                <tr>
                                    <th>Customer ID</th>
                                    <th>Customer Name</th>
                                    <th>Gender</th>
                                    <th>Address</th>
                                </tr>
                                </thead>
                                <tbody>
                                {uploadedData.map((customer) => (
                                    <tr key={customer.id}>
                                        <td >{customer.id}</td>
                                        <td>{customer.customerName}</td>
                                        <td>{customer.gender}</td>
                                        <td>{customer.address}</td>
                                    </tr>
                                ))}
                                </tbody>
                            </table>

                            }




                    </td>

                </tr>

                </tbody>
            </table>


        </div>
    );
};

export default CustomerUpload;
import React, { useState } from 'react';

import LeftHeader from "../LeftHeader/index.js";
import "./index.css";
import Header from "../Header/index.js";

const Home = () => {

    return (
        <div className="HomeContainer">

            <table>
                <thead>
                <tr>
                    <th colSpan="2"><Header/></th>
                </tr>
                </thead>
                <tbody>
                    <tr >
                        <td style={{ textAlign: 'center', verticalAlign: 'middle' ,height: '350px' }}>
                            <LeftHeader/>
                        </td>
                        <td style={{ height: '350px',textAlign: 'center', verticalAlign: 'middle' }} className="homeData" >
                                <h1 className="homeTab">Home</h1>
                                <p className="homeDescription">
                                    Welcome to UpwardIQ
                                    Bulk upload customer Data Application
                                </p>
                        </td>

                    </tr>

                </tbody>
            </table>
        </div>


    )

}

export default Home;
import {Link} from "react-router-dom";
import React from "react";
import "./index.css"


const Header =()=> {
    return (
        <div className="container">

        <img src="https://res.cloudinary.com/dpaqmxses/image/upload/v1731763420/Picture1_nr4jjk.jpg" alt="image-banner"/>

        </div>
    )
}

export default Header;
import {Link} from "react-router-dom";
import React from "react";
import "./index.css";


const LeftHeader=()=> {
    return (
        <div className="LeftHeader">
            <Link to="/upload" className="uploadCustomer">Upload Customer</Link>
            <Link to="/search">Search Customer</Link>
        </div>

    )
}

export default LeftHeader;
